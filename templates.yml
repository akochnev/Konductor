#!/usr/local/bin/ansible-playbook --inventory=inventory
- name: '{{ ansible_name }} | bundle | template' 
  hosts: containerone
  vars_files:
    - '../p1.yml'
    - 'vars/{{ target_environment }}.yml'
    - 'vars/global.yml'
  vars:
    module: "template"
    state_provider: "{{ terraform_state_provider }}"
    ansible_name_module: "{{ ansible_name_bundle }} | {{ module }}"
    dir_bundle_templates: "{{ dir_git_bundle }}/templates"
    tmpl_installconfig_j2: "{{ dir_bundle_templates }}/openshift-install/{{ cloud_provider }}-{{ target_environment }}-install-config.yaml.j2"
    cloud_key_id_special: "{{ lookup('ini', 'aws_access_key_id section=default file={{ dir_artifacts }}/.aws/govcloud.credentials') }}"
    cloud_key_secret_special: "{{ lookup('ini', 'aws_secret_access_key section=default file={{ dir_artifacts }}/.aws/govcloud.credentials') }}"
    redhat_quay_pull_file: '{{ dir_artifacts }}/.docker/master.json }}'
  tasks:

    - name: '{{ ansible_name_module }} | template | Stage OpenShift Manifests' 
      template:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
      loop: 
        - { module: 'templates', src: "{{ tmpl_installconfig_j2 }}", dest: "{{ dir_artifacts }}/bak/install-config.yaml" }
        - { module: 'templates', src: "{{ dir_bundle_templates }}/openshift-install/99_openshift-image-registry_installer-cloud-credentials-secret.yaml.j2", dest: "{{ dir_artifacts }}/bak/openshift/99_openshift-image-registry_installer-cloud-credentials-secret.yaml"}
        - { module: 'templates', src: "{{ dir_bundle_templates }}/openshift-install/99_openshift-ingress-operator_cloud-credentials-secret.yaml.j2", dest: "{{ dir_artifacts }}/bak/openshift/99_openshift-ingress-operator_cloud-credentials-secret.yaml"}
        - { module: 'templates', src: "{{ dir_bundle_templates }}/openshift-install/99_openshift-machine-api_aws-cloud-credentials-secret.yaml.j2", dest: "{{ dir_artifacts }}/bak/openshift/99_openshift-machine-api_aws-cloud-credentials-secret.yaml"}
        - { module: 'p1', src: "{{ dir_bundle_templates }}/terraform/global.tfvars.j2", dest: "{{ dir_terraform }}/p1.tfvars"}
        - { module: 'core', src: "{{ dir_bundle_templates }}/terraform/{{ state_provider }}.tfstate.j2", dest: "{{ dir_git_tfcore }}/{{ state_provider }}.tfstate"}
        - { module: 'cloudctl', src: "{{ dir_bundle_templates }}/terraform/{{ state_provider }}.tfstate.j2", dest: "{{ dir_git_tfcloudctl }}/{{ state_provider }}.tfstate"}
        - { module: 'bootstrap', src: "{{ dir_bundle_templates }}/terraform/{{ state_provider }}.tfstate.j2", dest: "{{ dir_git_tfbootstrap }}/{{ state_provider }}.tfstate"}
        - { module: 'masters', src: "{{ dir_bundle_templates }}/terraform/{{ state_provider }}.tfstate.j2", dest: "{{ dir_git_tfmasters }}/{{ state_provider }}.tfstate"}
