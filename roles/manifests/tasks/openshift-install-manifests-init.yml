---
####### Create Base Openshift Manifests
- name: '{{ ansible_name_module }} | role | manifests | stat | find data/install-config.yaml'
  stat:
    path: '{{ dir_artifacts }}/data/install-config.yaml'
  register: data_install_config_yaml

- name: '{{ ansible_name_module }} | role | manifests | stat | find bak/install-config.yaml'
  stat:
    path: '{{ dir_artifacts }}/bak/install-config.yaml'
  register: bak_install_config_yaml

- name: '{{ ansible_name_module }} | role | manifests | file | Clean/Purge Old Artifacts'
  file:
    path: '{{ dir_artifacts }}/data/'
    state: absent
  when:
    - not data_install_config_yaml.stat.exists

- name: '{{ ansible_name_module }} | role | manifests | file | Create {{ dir_artifacts }}/data'
  file:
    path: '{{ dir_artifacts }}/data'
    state: directory

- name: '{{ ansible_name_module }} | role | manifests | file | Copy install-config.yaml from backup'
  copy:
    src: '{{ dir_artifacts }}/bak/install-config.yaml'
    dest: '{{ dir_artifacts }}/data/install-config.yaml'
  when:
    - not data_install_config_yaml.stat.exists
    - bak_install_config_yaml.stat.exists

####### Switch to AWS Commercial Credentials
# name: '{{ ansible_name_module }} | copy | Switch to AWS Commercial Credentials'
# copy:
#   src: "{{ dir_artifacts }}/.aws/commercial.credentials"
#   dest: "{{ local_home }}/.aws/credentials"

####### Set AWS GovCloud Credentials
- name: '{{ ansible_name_module }} | copy | Set AWS Credentials'
  copy:
    src: "{{ dir_artifacts }}/.aws/govcloud.credentials"
    dest: "{{ local_home }}/.aws/credentials"

####### Generate base manifests set
- name: '{{ ansible_name_module }} | role | manifests | shell | openshift-install create manifests'
  shell: "{{ openshift_install_binary }} create manifests --dir={{ dir_artifacts }}/data"

####### Ignition User Data
- name: '{{ ansible_name_module }} role | manifests | template | Stage OpenShift Ignition User-Data JSON'
  template:
    src: user-data-ign.json.j2
    dest: "{{ dir_artifacts }}/user-data/{{ item.name }}.json"
  with_items:
    - { name: master,    IGNITION_URL: "http://registry.{{ cluster_domain }}/master.ign" }
    - { name: bootstrap, IGNITION_URL: "http://registry.{{ cluster_domain }}/bootstrap.ign" }
    - { name: bastion,   USER_AUTH_KEY: "{{ lookup('file',  dir_artifacts +  '/.ssh/id_rsa_' + cluster_domain + '.pub' ) }}" }

- name: '{{ ansible_name_module }} role | manifests | template | Stage OpenShift Ignition User-Data B64'
  template:
    src: user-data-ign.b64.j2
    dest: "{{ dir_artifacts }}/user-data/{{ item.name }}-json.b64"
  with_items:
    - { name: master,    IGNITION_URL: "http://registry.{{ cluster_domain }}/master.ign" }
    - { name: bootstrap, IGNITION_URL: "http://registry.{{ cluster_domain }}/bootstrap.ign" }
    - { name: bastion,   USER_AUTH_KEY: "{{ lookup('file',  dir_artifacts +  '/.ssh/id_rsa_' + cluster_domain + '.pub' ) }}" }

####### Self Signed Certs for registry
- name: '{{ ansible_name_module }} role | manifests | openssl_privatekey | Registry Private Key'
  openssl_privatekey:
    path: "{{ dir_artifacts }}/ssl/{{ cluster_domain }}.key"
    size: 4096

- name: '{{ ansible_name_module }} role | manifests | openssl_csr | Registry Certificate Signing Request'
  openssl_csr:
    path: "{{ dir_artifacts }}/ssl/{{ cluster_domain }}.csr"
    privatekey_path: "{{ dir_artifacts }}/ssl/{{ cluster_domain }}.key"
    common_name: "{{ cluster_domain }}"
    subject_alt_name:
      - DNS:registry.{{ cluster_domain }}
      - DNS:{{ name_domain }}
      - IP:10.0.1.1

- name: '{{ ansible_name_module }} role | manifests | openssl_certificate | Registry Self Signed Certificate'
  openssl_certificate:
    path: "{{ dir_artifacts }}/ssl/{{ cluster_domain }}.crt"
    privatekey_path: "{{ dir_artifacts }}/ssl/{{ cluster_domain }}.key"
    csr_path: "{{ dir_artifacts }}/ssl/{{ cluster_domain }}.csr"
    provider: selfsigned
    selfsigned_not_after: "+365d"
    selfsigned_digest: "sha256"

####### Docker Config: pull secrets for external registries (redhat.io / quay.io)
- name: '{{ ansible_name_module }} role | manifests | openssl_certificate | docker config.json'
  copy:
    dest: "/root/.docker/config.json"
    content: "{{ pull_secrets }}"
####### Authentication secrets for private mirror registry
# name: '{{ ansible_name_module }} role | manifests | openssl_certificate | docker mirror.json'
# copy:
#   dest: "{{ dir_artifacts }}/.docker/mirror.json"
#   content: "{{ registry_secrets }}"
####### Merged Authentication: external and internal registries
# name: '{{ ansible_name_module }} role | manifests | openssl_certificate | docker master.json'
# copy:
#   dest: "{{ dir_artifacts }}/.docker/master.json"
#   content: "{{ registry_secrets | combine(pull_secrets, recursive=True) }}"

####### ssh keys for cluster deploy
- name: '{{ ansible_name_module }} role | manifests | file | root .ssh directory'
  file:
    state: directory
    mode: '0700'
    path: '/root/.ssh'

- name: '{{ ansible_name_module }} role | manifests | openssh_keypair | ssh keys'
  openssh_keypair:
    path: /root/.ssh/id_rsa_{{ cluster_domain }}
    comment: "core@{{ cluster_domain }}"
